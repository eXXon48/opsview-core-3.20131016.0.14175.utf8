#!/usr/bin/perl
#
# AUTHORS:
#	Copyright (C) 2003-2013 Opsview Limited. All rights reserved
#	Written by Neil Ferguson
#
#    This file is part of Opsview
#
#    Opsview is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    Opsview is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with Opsview; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
use strict;
use warnings;

use FindBin qw($Bin);
use lib "/opt/opsview/perl/lib/perl5", "$Bin/../lib";
use Net::SNMP;
use Opsview::NagiosPlugin::SNMP;

my $np = Opsview::NagiosPlugin::SNMP->new(
    usage     => "Usage: %s",
    shortname => "check_snmp_vmware_vmkernel",
    version   => "0.2",
    blurb     => "Checks whether or not the ESX VM Kernel is loaded",
    snmp      => {
        "snmp-version" => "2c",
        "snmp-timeout" => 10,
        "v1-fallback"  => 1,
    },
);

$np->getopts;

my $oid_sysDescr       = ".1.3.6.1.2.1.1.1.0";
my $oid_vmkernelstatus = ".1.3.6.1.4.1.6876.4.1.1.1.0";
my $retval             = 3;

my $s = $np->snmp;

# Call this when you know you'll get a single value back
sub get_oid_value {
    our ( $oid, $result, $status, $returnstring );

    $oid = shift(@_);

    if ( !defined( $s->get_request($oid) ) ) {
        if ( !defined( $s->get_request($oid_sysDescr) ) ) {
            print "SNMP agent not responding\n";
            exit 3;
        }
        else {
            print "SNMP OID does not exist\n";
            exit 3;
        }
    }

    foreach ( $s->var_bind_names() ) {
        $result = $s->var_bind_list()->{$_};
    }

    return $result;
}

if ( !defined( $s->get_request($oid_sysDescr) ) ) {
    print "SNMP agent not responding\n";
    exit 3;
}

# Check what the value is
if ( get_oid_value($oid_vmkernelstatus) eq "yes" ) {
    $retval = 0;
}
else {
    $retval = 2;
}

# Show appropriate message (we don't have a warning state)
if ( $retval == 0 ) {
    print "OK - VM Kernel is loaded | kernel_loaded=1\n";
}
elsif ( $retval == 2 ) {
    print "CRITICAL - VM Kernel is not loaded! | kernel_loaded=0\n";
}
else {
    print "UNKNOWN - plugin error\n";
}

exit $retval;
