#!/usr/bin/perl -w

#  Copyright (C) 2003-2013 Opsview Limited. All rights reserved
#  W: http://www.opsview.com/
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

# turn off Device::Modem logging :-(
package DummyLog;

sub new {
    my $self = {};
    bless($self);
    return $self;
}

sub write {
    return;
}

1;

use warnings;
use strict;
use FindBin qw($Bin $Script);
use lib "$Bin/../perl/lib";
use lib '/usr/local/nagios/perl/lib';
use lib '/usr/local/nagios/lib';
use Nagios::Plugin;
use Nagios::Plugin::Functions qw(max_state %STATUS_TEXT);

my $VERSION = "1.0";

my $np = Nagios::Plugin->new(
    shortname => 'MODEM_ACTIVE',
    usage     => 'Usage: %s [-b baud_rate] <device name>',
    version   => $VERSION,
    blurb     => 'Check that a modem returns OK for an AT command',
);
$np->add_arg(
    spec    => 'baud_rate|b=s',
    help    => 'Baud rate of device)',
    default => 9600,
);

$np->getopts;

eval { require Device::Modem; import Device::Modem; };
if ($@) {
    $np->nagios_exit(
        return_code => UNKNOWN,
        message     => 'Required perl module "Device::Modem" is not installed',
    );
}

my $device = shift @ARGV;

$np->nagios_exit(
    return_code => UNKNOWN,
    message     => 'No device specified',
) unless $device;

my $modem = new Device::Modem(
    log  => DummyLog->new(),
    port => $device,
);

if ( !$modem->connect( baudrate => $np->opts->baud_rate ) ) {
    $np->nagios_exit(
        return_code => CRITICAL,
        message     => "Cannot connect to serial port $device\n"
    );
}

if ( !$modem->is_active() ) {
    $np->nagios_exit(
        return_code => CRITICAL,
        message     => "Modem $device is not active\n"
    );
}

$modem->attention();

if ( !$modem->atsend("AT\r\n") ) {
    $np->nagios_exit(
        return_code => CRITICAL,
        message     => "Cannot write to modem $device\n"
    );
}
my $answer = $modem->answer();
if ( !defined $answer ) {
    $np->nagios_exit(
        return_code => CRITICAL,
        message     => "Modem failed to reply\n"
    );
}
if ( $answer ne "OK" ) {
    $np->nagios_exit(
        return_code => CRITICAL,
        message     => "Modem returned $answer\n"
    );
}

$np->nagios_exit(
    return_code => OK,
    message     => "Modem answered OK\n"
);
